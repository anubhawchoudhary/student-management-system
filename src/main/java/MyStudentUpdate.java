
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acer
 */
public class MyStudentUpdate extends javax.swing.JFrame {

    /**
     * Creates new form MyStudentUpdate
     */
    public String tid;
    public MyStudentUpdate() {
        initComponents();
    }
    
    public MyStudentUpdate(String tid) {
        initComponents();
        this.tid=tid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_year = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_ccode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_atdMin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_atdMax = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_myStudents = new javax.swing.JTable();
        jButton_filter = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jTextField_marks = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_attendance = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_usn = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_courseCode = new javax.swing.JTextField();
        jButton_cancel = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jButton_deleteStudent = new javax.swing.JButton();
        jButton_atdStatus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 0));

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MY STUDENTS");

        jTextField_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_yearActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("FILTERS :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("YEAR :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("COURSE CODE :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("ATTENDANCE PERCENTAGE :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("min");

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setText("max");

        jTable_myStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "USN", "NAME", "COURSE CODE", "CREDITS", "YEAR", "MARKS", "ATTENDANCE"
            }
        ));
        jTable_myStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_myStudentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_myStudents);

        jButton_filter.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton_filter.setText("APPLY");
        jButton_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_filterActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel8.setText("MARKS :");

        jTextField_marks.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jTextField_marks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_marksActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setText("ATTENDANCE :");

        jTextField_attendance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel10.setText("USN :");

        jTextField_usn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel11.setText("COURSE CODE :");

        jTextField_courseCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton_cancel.setBackground(new java.awt.Color(102, 204, 0));
        jButton_cancel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton_cancel.setText("CANCEL");
        jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelActionPerformed(evt);
            }
        });

        jButton_update.setBackground(new java.awt.Color(102, 102, 255));
        jButton_update.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton_update.setText("UPDATE");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jButton_deleteStudent.setBackground(new java.awt.Color(204, 0, 0));
        jButton_deleteStudent.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton_deleteStudent.setText("DELETE");
        jButton_deleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteStudentActionPerformed(evt);
            }
        });

        jButton_atdStatus.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton_atdStatus.setText("SEND ATTENDANCE STATUS");
        jButton_atdStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_atdStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_year, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField_ccode))
                                        .addGap(39, 39, 39)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_atdMin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_atdMax, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jButton_filter))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jButton_deleteStudent)
                                        .addGap(49, 49, 49)
                                        .addComponent(jButton_update))
                                    .addComponent(jSeparator1)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_usn, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                                    .addComponent(jTextField_courseCode)
                                    .addComponent(jTextField_marks)
                                    .addComponent(jTextField_attendance))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_cancel)
                        .addGap(162, 162, 162)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton_atdStatus)
                .addGap(201, 201, 201))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_ccode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_atdMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_atdMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(jButton_filter)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_usn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_marks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_attendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_update)
                            .addComponent(jButton_deleteStudent))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_cancel))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_atdStatus)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_yearActionPerformed

    private void jTextField_marksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_marksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_marksActionPerformed

    private void jButton_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_filterActionPerformed
        
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        int min=0,max=100;
        String yr="%" , cCode="%";
       // query="SELECT usn , sname , course_code , credits , year , marks , attendence FROM student natural join teaches where teacher_id= ?";
        
        try {
            
            if(!jTextField_ccode.getText().equals("")){
            cCode=jTextField_ccode.getText();
       
            }
            if(!jTextField_year.getText().equals("")){
                yr=jTextField_year.getText();
            }
            if(!jTextField_atdMin.getText().equals("")){
                min=Integer.parseInt(jTextField_atdMin.getText());
            }
            if(!jTextField_atdMax.getText().equals("")){
                max=Integer.parseInt(jTextField_atdMax.getText());
            }
            
            ps=con.prepareStatement("SELECT usn , sname , course_code , credits , year , marks , attendence FROM student natural join teaches "
                    + "where teacher_id= ? AND course_code like ? AND year like ? AND attendence >= ? AND attendence <= ?");
            ps.setString(1,this.tid );
            ps.setString(2, cCode);
            ps.setString(3, yr);
            ps.setDouble(4, min);
            ps.setDouble(5, max);
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable_myStudents.getModel();
            model.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[7];
                row[0]=rs.getString("usn");
                row[1]= rs.getString("sname");
                row[2]=rs.getString("course_code");
                row[3]=rs.getString("credits");
                row[4]=rs.getString("year");
                row[5]=rs.getString("marks");
                row[6]=rs.getString("attendence");
                
                model.addRow(row);
            }
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "FAILED TO FILTER");
        }
        
    }//GEN-LAST:event_jButton_filterActionPerformed

    private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton_cancelActionPerformed

    private void jTable_myStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_myStudentsMouseClicked
        
       int rowind=jTable_myStudents.getSelectedRow();
       DefaultTableModel model=(DefaultTableModel)jTable_myStudents.getModel();
       jTextField_usn.setText(model.getValueAt(rowind, 0).toString());
       jTextField_courseCode.setText(model.getValueAt(rowind, 2).toString());
       jTextField_marks.setText(model.getValueAt(rowind, 5).toString());
       jTextField_attendance.setText(model.getValueAt(rowind, 6).toString());
        
        
    }//GEN-LAST:event_jTable_myStudentsMouseClicked

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        
        try{
            String usn=jTextField_usn.getText();
            String courseCode=jTextField_courseCode.getText();
            int marks=Integer.parseInt(jTextField_marks.getText());
            double atd=Double.parseDouble(jTextField_attendance.getText());
            
            Connection con=MyConnection.getConnection();
            PreparedStatement ps;
            ps=con.prepareStatement("SELECT * FROM teaches where teacher_id=? AND usn=? AND course_code=?");
            ps.setString(1, this.tid);
            ps.setString(2, usn);
            ps.setString(3, courseCode);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                ps=con.prepareStatement("UPDATE teaches SET marks=? , attendence=? WHERE teacher_id=? AND usn=? AND course_code=?");
                ps.setInt(1, marks);
                ps.setDouble(2, atd);
                ps.setString(3, this.tid);
                ps.setString(4, usn);
                ps.setString(5, courseCode);
                int res=ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "STUDENT DETAILS UPDATED SUCCESSFULLY !");
                
                
                int min=0,max=100;
                String yr="%" , cCode="%";
                if(!jTextField_ccode.getText().equals("")){
                cCode=jTextField_ccode.getText();
       
                }
                if(!jTextField_year.getText().equals("")){
                    yr=jTextField_year.getText();
                }
                if(!jTextField_atdMin.getText().equals("")){
                    min=Integer.parseInt(jTextField_atdMin.getText());
                }
                if(!jTextField_atdMax.getText().equals("")){
                    max=Integer.parseInt(jTextField_atdMax.getText());
                }
                ps=con.prepareStatement("SELECT usn , sname , course_code , credits , year , marks , attendence FROM student natural join teaches "
                    + "where teacher_id= ? AND course_code like ? AND year like ? AND attendence >= ? AND attendence <= ?");
                ps.setString(1,this.tid );
                ps.setString(2, cCode);
                ps.setString(3, yr);
                ps.setDouble(4, min);
                ps.setDouble(5, max);
                rs= ps.executeQuery();
                DefaultTableModel model=(DefaultTableModel)jTable_myStudents.getModel();
                model.setRowCount(0);
                Object[] row ;
                while(rs.next()){
                    row = new Object[7];
                    row[0]=rs.getString("usn");
                    row[1]= rs.getString("sname");
                    row[2]=rs.getString("course_code");
                    row[3]=rs.getString("credits");
                    row[4]=rs.getString("year");
                    row[5]=rs.getString("marks");
                    row[6]=rs.getString("attendence");
                
                    model.addRow(row);
                }
                
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "NOT YOUR STUDENT");
            }
            
        }catch(Exception e){
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "FAILED TO UPDATE");
        }
        
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_deleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteStudentActionPerformed
         
        try{
            String usn=jTextField_usn.getText();
            String courseCode=jTextField_courseCode.getText();
            int marks=Integer.parseInt(jTextField_marks.getText());
            double atd=Double.parseDouble(jTextField_attendance.getText());
            
            Connection con=MyConnection.getConnection();
            PreparedStatement ps;
            ps=con.prepareStatement("SELECT * FROM teaches where teacher_id=? AND usn=? AND course_code=?");
            ps.setString(1, this.tid);
            ps.setString(2, usn);
            ps.setString(3, courseCode);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                ps=con.prepareStatement("DELETE FROM teaches WHERE teacher_id=? AND usn=? AND course_code=?");
                
                ps.setString(1, this.tid);
                ps.setString(2, usn);
                ps.setString(3, courseCode);
                int res=ps.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "USN :"+usn+" IS DELETED FROM COURSE "+courseCode+ " SUCCESSFULLY !");
                
                
                int min=0,max=100;
                String yr="%" , cCode="%";
                if(!jTextField_ccode.getText().equals("")){
                cCode=jTextField_ccode.getText();
       
                }
                if(!jTextField_year.getText().equals("")){
                    yr=jTextField_year.getText();
                }
                if(!jTextField_atdMin.getText().equals("")){
                    min=Integer.parseInt(jTextField_atdMin.getText());
                }
                if(!jTextField_atdMax.getText().equals("")){
                    max=Integer.parseInt(jTextField_atdMax.getText());
                }
                ps=con.prepareStatement("SELECT usn , sname , course_code , credits , year , marks , attendence FROM student natural join teaches "
                    + "where teacher_id= ? AND course_code like ? AND year like ? AND attendence >= ? AND attendence <= ?");
                ps.setString(1,this.tid );
                ps.setString(2, cCode);
                ps.setString(3, yr);
                ps.setDouble(4, min);
                ps.setDouble(5, max);
                rs= ps.executeQuery();
                DefaultTableModel model=(DefaultTableModel)jTable_myStudents.getModel();
                model.setRowCount(0);
                Object[] row ;
                while(rs.next()){
                    row = new Object[7];
                    row[0]=rs.getString("usn");
                    row[1]= rs.getString("sname");
                    row[2]=rs.getString("course_code");
                    row[3]=rs.getString("credits");
                    row[4]=rs.getString("year");
                    row[5]=rs.getString("marks");
                    row[6]=rs.getString("attendence");
                
                    model.addRow(row);
                }
                
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "NOT YOUR STUDENT");
            }
            
        }catch(Exception e){
            //System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "FAILED TO DELETE");
        }
    }//GEN-LAST:event_jButton_deleteStudentActionPerformed

    private void jButton_atdStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_atdStatusActionPerformed
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;        
        
        try {
                int min=0,max=100;
                String yr="%" , cCode="%";
                if(!jTextField_ccode.getText().equals("")){
                cCode=jTextField_ccode.getText();
       
                }
                if(!jTextField_year.getText().equals("")){
                    yr=jTextField_year.getText();
                }
                if(!jTextField_atdMin.getText().equals("")){
                    min=Integer.parseInt(jTextField_atdMin.getText());
                }
                if(!jTextField_atdMax.getText().equals("")){
                    max=Integer.parseInt(jTextField_atdMax.getText());
                }
                ps=con.prepareStatement("SELECT usn , parent_email , course_code , attendence FROM student natural join teaches "
                    + "where teacher_id= ? AND course_code like ? AND year like ? AND attendence >= ? AND attendence <= ?");
                ps.setString(1,this.tid );
                ps.setString(2, cCode);
                ps.setString(3, yr);
                ps.setDouble(4, min);
                ps.setDouble(5, max);
            
                ResultSet rs= ps.executeQuery();
                while(rs.next()){
                    JavaMailUtil m= new JavaMailUtil();
                    m.cCode=rs.getString("course_code");
                    m.atd=rs.getDouble("attendence");
                    m.sendMail(rs.getString("parent_email"));
                }
                
                JOptionPane.showMessageDialog(rootPane, "MESSAGE SENT SUCCESSFULLY");
                
        } catch (SQLException ex) {
            Logger.getLogger(MyStudentUpdate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MessagingException ex) {
            Logger.getLogger(MyStudentUpdate.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "NETWORK ERROR ! SOME MESSAGES MAY BE UNDELIVERED !");
        }
    }//GEN-LAST:event_jButton_atdStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyStudentUpdate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_atdStatus;
    private javax.swing.JButton jButton_cancel;
    private javax.swing.JButton jButton_deleteStudent;
    private javax.swing.JButton jButton_filter;
    private javax.swing.JButton jButton_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable jTable_myStudents;
    private javax.swing.JTextField jTextField_atdMax;
    private javax.swing.JTextField jTextField_atdMin;
    private javax.swing.JTextField jTextField_attendance;
    private javax.swing.JTextField jTextField_ccode;
    private javax.swing.JTextField jTextField_courseCode;
    private javax.swing.JTextField jTextField_marks;
    private javax.swing.JTextField jTextField_usn;
    private javax.swing.JTextField jTextField_year;
    // End of variables declaration//GEN-END:variables
}
