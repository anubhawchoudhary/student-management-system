
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class StaffMainPage extends javax.swing.JFrame {

    public String tid;
    public StaffMainPage() {
        initComponents();
    }
    
    public StaffMainPage(String staffName , String tid) {
        initComponents();
        this.tid=tid;
        jLabel_Hi.setText(staffName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_Hi = new javax.swing.JLabel();
        jButton_Logout = new javax.swing.JButton();
        jTextField_studSearchBar = new javax.swing.JTextField();
        jButton_proctSearch = new javax.swing.JButton();
        jButton_teacherSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_searchContent = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel_Hi.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jPanel1.add(jLabel_Hi);
        jLabel_Hi.setBounds(0, 0, 300, 30);

        jButton_Logout.setBackground(new java.awt.Color(255, 0, 0));
        jButton_Logout.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_Logout.setIcon(new javax.swing.ImageIcon("C:\\Users\\acer\\Desktop\\images\\logout.jpg")); // NOI18N
        jButton_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LogoutActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Logout);
        jButton_Logout.setBounds(1340, 0, 30, 30);

        jTextField_studSearchBar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField_studSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_studSearchBarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_studSearchBarKeyReleased(evt);
            }
        });
        jPanel1.add(jTextField_studSearchBar);
        jTextField_studSearchBar.setBounds(420, 250, 597, 38);

        jButton_proctSearch.setText("PROCTOR SEARCH");
        jButton_proctSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_proctSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_proctSearch);
        jButton_proctSearch.setBounds(560, 310, 125, 23);

        jButton_teacherSearch.setText("TEACHER SEARCH");
        jButton_teacherSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_teacherSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_teacherSearch);
        jButton_teacherSearch.setBounds(750, 310, 121, 23);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable_searchContent.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jTable_searchContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USN", "NAME"
            }
        ));
        jTable_searchContent.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable_searchContent.setOpaque(false);
        jTable_searchContent.setSelectionForeground(new java.awt.Color(51, 51, 51));
        jTable_searchContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_searchContentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_searchContent);
        if (jTable_searchContent.getColumnModel().getColumnCount() > 0) {
            jTable_searchContent.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(420, 351, 597, 310);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("My Students");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1200, 0, 111, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\acer\\Desktop\\images\\light.jpg")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1380, 700);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1380, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LogoutActionPerformed
        
        loginMenuPage dl=new loginMenuPage();
        dl.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton_LogoutActionPerformed

    private void jTable_searchContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_searchContentMouseClicked
        
        int rowIndex= jTable_searchContent.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) jTable_searchContent.getModel();
        StudentDetail sd = new StudentDetail();
        String susn=model.getValueAt(rowIndex, 0).toString();
        sd.jLabel_name.setText(model.getValueAt(rowIndex, 1).toString());
        sd.jLabel_usn.setText(model.getValueAt(rowIndex, 0).toString());
        
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT project FROM student where usn= ?");
            ps.setString(1,susn );
            ResultSet rs1= ps.executeQuery();
            if(rs1.next()){
                sd.jTextArea_proj.setText(rs1.getString("project"));
            }
            
            ps=con.prepareStatement("SELECT course_code , course_name , year , marks , attendence , credits FROM student natural join teaches where usn= ?");
            ps.setString(1,susn );
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model2=(DefaultTableModel)sd.jTable_sDetails.getModel();
            //model2.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[6];
                row[0]=rs.getString("course_code");
                row[1]=rs.getString("course_name");
                row[2]=rs.getString("year");
                row[3]=rs.getString("marks");
                row[4]=rs.getString("attendence");
                row[5]=rs.getString("credits");
                
                model2.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        sd.setVisible(true);
    }//GEN-LAST:event_jTable_searchContentMouseClicked

    private void jButton_teacherSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_teacherSearchActionPerformed
        
        //jTable_searchContent.clearSelection();
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT usn , sname FROM student natural join teaches where teacher_id=? AND sname LIKE ?");
            ps.setString(1, tid);
            ps.setString(2, "%"+jTextField_studSearchBar.getText()+"%");
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable_searchContent.getModel();
            model.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[2];
                row[0]=rs.getString("usn");
                row[1]=rs.getString("sname");
                
                model.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_teacherSearchActionPerformed

    private void jButton_proctSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_proctSearchActionPerformed
        
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT usn , sname FROM student where proctor_id=? AND sname LIKE ?");
            ps.setString(1, tid);
            ps.setString(2, "%"+jTextField_studSearchBar.getText()+"%");
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable_searchContent.getModel();
            model.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[2];
                row[0]=rs.getString("usn");
                row[1]=rs.getString("sname");
                
                model.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_proctSearchActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        MyStudentUpdate stud = new MyStudentUpdate(tid);
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT usn , sname , course_code , credits , year , marks , attendence FROM student natural join teaches where teacher_id= ?");
            ps.setString(1,this.tid );
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)stud.jTable_myStudents.getModel();
            //model2.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[7];
                row[0]=rs.getString("usn");
                row[1]= rs.getString("sname");
                row[2]=rs.getString("course_code");
                row[3]=rs.getString("credits");
                row[4]=rs.getString("year");
                row[5]=rs.getString("marks");
                row[6]=rs.getString("attendence");
                
                model.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        stud.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField_studSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_studSearchBarKeyPressed
        
        /*Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT usn , sname FROM student natural join teaches where teacher_id=? AND sname LIKE ?");
            ps.setString(1, tid);
            ps.setString(2, "%"+jTextField_studSearchBar.getText()+"%");
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable_searchContent.getModel();
            model.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[2];
                row[0]=rs.getString("usn");
                row[1]=rs.getString("sname");
                
                model.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_jTextField_studSearchBarKeyPressed

    private void jTextField_studSearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_studSearchBarKeyReleased
        Connection con=MyConnection.getConnection();
        PreparedStatement ps;
        
        try {
            ps=con.prepareStatement("SELECT distinct usn , sname FROM student natural join teaches where teacher_id=? AND sname LIKE ?");
            ps.setString(1, tid);
            if(jTextField_studSearchBar.getText().trim().equals("")){
                ps.setString(2,"-lkdfk5mg");
                
            }else{
                ps.setString(2, "%"+jTextField_studSearchBar.getText().trim()+"%");
            }
            
            
            ResultSet rs= ps.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable_searchContent.getModel();
            model.setRowCount(0);
            Object[] row ;
            while(rs.next()){
                row = new Object[2];
                row[0]=rs.getString("usn");
                row[1]=rs.getString("sname");
                
                model.addRow(row);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField_studSearchBarKeyReleased

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffMainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Logout;
    private javax.swing.JButton jButton_proctSearch;
    private javax.swing.JButton jButton_teacherSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_Hi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_searchContent;
    private javax.swing.JTextField jTextField_studSearchBar;
    // End of variables declaration//GEN-END:variables
}
